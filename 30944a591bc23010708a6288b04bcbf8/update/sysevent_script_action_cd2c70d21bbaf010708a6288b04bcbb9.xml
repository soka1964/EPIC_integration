<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sysevent_script_action">
    <sysevent_script_action action="INSERT_OR_UPDATE">
        <active>true</active>
        <condition_script/>
        <description/>
        <event_name>x_70433_epic_test.epic.cm.outbound.ticke</event_name>
        <name>EPIC  - Outbound UPDATE_CM_Ticket_v001</name>
        <order>100</order>
        <script><![CDATA[//This Script Action POSTs data to EPIC Content Management

main();

function main() {
    var restResult = updateEPICCMTicket();
}

function updateEPICCMTicket() {
    //Check Outbound Queue for new EPIC CM Update Tickets  
    var readOutQueueGR = new GlideRecord('x_70433_epic_test_epic_to_sn_outbound');
    readOutQueueGR.addQuery('state', 'New');
    readOutQueueGR.addQuery('request_action', 'UPDATE_CM_Ticket_v001');
    //readOutQueueGR.addQuery('u_change_request_id', '!=', '');
    //readOutQueueGR.addQuery('u_ticket_id', '!=', '');
    readOutQueueGR.setLimit(1);
    readOutQueueGR.query();
    while (readOutQueueGR.next()) {
        //Call REST POST
        var restState = this.EPICRESTUpdateCMTicket(readOutQueueGR.request_payload);
        if (restState == 100) {
              readOutQueueGR.state = 'Done';
            readOutQueueGR.update();
        } else { //Wrong Request Action

        }
    }
}

function EPICRESTUpdateCMTicket(request_payload) {
	var connectionProfileName = 'EPIC Tickets to ServiceNow Change Requests v001';

    var connectionDataGR = new GlideRecord('x_70433_epic_test_epic_connections'); //Indicate the table to query from
    connectionDataGR.addQuery('connection_name', connectionProfileName);
    connectionDataGR.addQuery('enable', true);
    connectionDataGR.query();
    while (connectionDataGR.next()) {
        this.GetFilteredTicketIDs_URL = connectionDataGR.epic_rest_url_3;
        this.GetFilteredTicketIDs_body = connectionDataGR.json_selection_1;
        if (connectionDataGR.authorization_method == 'http_basic_authorization') {
            this.GetFilteredTicketIDs_authorizationKey = connectionDataGR.basic_authorization_key;
        } else if (connectionDataGR.authorization_method == 'oauth_token') {

        } else { //Write Error in log

        }
        this.GetFilteredTicketIDs_epicclientid = connectionDataGR.epic_client_id;
        this.GetFilteredTicketIDs_usemidserver = connectionDataGR.use_mid_server;
        this.GetFilteredTicketIDs_midserver = connectionDataGR.mid_server.getDisplayValue();
        this.GetFilteredTicketIDs_connection_timeout = connectionDataGR.connection_timeout;
    }
    //Call SetTicket
    //var SetTicket_URL = 'https://apporchard.epic.com/interconnect-aocurprd-username/api/epic/2018/ContentManagement/Ticket/SetTicket/SetTicket';
    //var body = request_payload;
    var request = new sn_ws.RESTMessageV2();
    request.setEndpoint(this.GetFilteredTicketIDs_URL);
    request.setHttpMethod('POST');

    request.setRequestHeader('Authorization', 'Basic ' + this.GetFilteredTicketIDs_authorizationKey.toString());
    request.setRequestHeader('Epic-Client-ID', this.GetFilteredTicketIDs_epicclientid);
    request.setRequestHeader("Accept", "application/json");
    request.setRequestHeader("Content-Type", "application/json");

    request.setRequestBody(request_payload);

    if (this.GetFilteredTicketIDs_usemidserver == true) {
        request.setMIDServer(this.GetFilteredTicketIDs_midserver);
    }
    request.setHttpTimeout(this.GetFilteredTicketIDs_connection_timeout);

    var response = request.executeAsync();
    response.waitForResponse(this.GetFilteredTicketIDs_connection_timeout);
    return 100;
}]]></script>
        <synchronous>false</synchronous>
        <sys_class_name>sysevent_script_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-09-26 20:38:08</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>cd2c70d21bbaf010708a6288b04bcbb9</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>EPIC  - Outbound UPDATE_CM_Ticket_v001</sys_name>
        <sys_overrides/>
        <sys_package display_value="EPIC Test" source="x_70433_epic_test">30944a591bc23010708a6288b04bcbf8</sys_package>
        <sys_policy/>
        <sys_scope display_value="EPIC Test">30944a591bc23010708a6288b04bcbf8</sys_scope>
        <sys_update_name>sysevent_script_action_cd2c70d21bbaf010708a6288b04bcbb9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-10-08 06:42:04</sys_updated_on>
    </sysevent_script_action>
</record_update>
